#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2025 Red Hat Inc.  All Rights Reserved.
#
# FS QA Test No. 772
#
# Test file_getattr/file_setattr syscalls
#
. ./common/preamble
_begin_fstest auto

. ./common/filter

# Modify as appropriate.
_require_scratch
_require_test_program "af_unix"
_require_test_program "file_attr"
_require_symlinks
_require_mknod

_scratch_mkfs >>$seqres.full 2>&1
_scratch_mount

file_attr () {
	$here/src/file_attr $*
}

create_af_unix () {
	$here/src/af_unix $* || echo af_unix failed
}

projectdir=$SCRATCH_MNT/prj

# Create normal files and special files
mkdir $projectdir
mkfifo $projectdir/fifo
mknod $projectdir/chardev c 1 1
mknod $projectdir/blockdev b 1 1
create_af_unix $projectdir/socket
touch $projectdir/foo
ln -s $projectdir/foo $projectdir/symlink
touch $projectdir/bar
ln -s $projectdir/bar $projectdir/broken-symlink
rm -f $projectdir/bar

echo "Error codes"
# wrong AT_ flags
file_attr --get --invalid-at $projectdir ./foo
file_attr --set --invalid-at $projectdir ./foo
# wrong fsxattr size (too big, too small)
file_attr --get --too-big-arg $projectdir ./foo
file_attr --get --too-small-arg $projectdir ./foo
file_attr --set --too-big-arg $projectdir ./foo
file_attr --set --too-small-arg $projectdir ./foo
# out of fsx_xflags mask
file_attr --set --new-fsx-flag $projectdir ./foo

echo "Initial attributes state"
file_attr --get $projectdir | _filter_scratch | _filter_file_attributes ~d
file_attr --get $projectdir ./fifo | _filter_file_attributes ~d
file_attr --get $projectdir ./chardev | _filter_file_attributes ~d
file_attr --get $projectdir ./blockdev | _filter_file_attributes ~d
file_attr --get $projectdir ./socket | _filter_file_attributes ~d
file_attr --get $projectdir ./foo | _filter_file_attributes ~d
file_attr --get $projectdir ./symlink | _filter_file_attributes ~d

echo "Set FS_XFLAG_NODUMP (d)"
file_attr --set --set-nodump $projectdir
file_attr --set --set-nodump $projectdir ./fifo
file_attr --set --set-nodump $projectdir ./chardev
file_attr --set --set-nodump $projectdir ./blockdev
file_attr --set --set-nodump $projectdir ./socket
file_attr --set --set-nodump $projectdir ./foo
file_attr --set --set-nodump $projectdir ./symlink

echo "Read attributes"
file_attr --get $projectdir | _filter_scratch | _filter_file_attributes ~d
file_attr --get $projectdir ./fifo | _filter_file_attributes ~d
file_attr --get $projectdir ./chardev | _filter_file_attributes ~d
file_attr --get $projectdir ./blockdev | _filter_file_attributes ~d
file_attr --get $projectdir ./socket | _filter_file_attributes ~d
file_attr --get $projectdir ./foo | _filter_file_attributes ~d
file_attr --get $projectdir ./symlink | _filter_file_attributes ~d

echo "Set attribute on broken link with AT_SYMLINK_NOFOLLOW"
file_attr --set --set-nodump $projectdir ./broken-symlink
file_attr --get $projectdir ./broken-symlink

file_attr --set --no-follow --set-nodump $projectdir ./broken-symlink
file_attr --get --no-follow $projectdir ./broken-symlink | _filter_file_attributes ~d

cd $SCRATCH_MNT
touch ./foo2
echo "Initial state of foo2"
file_attr --get --at-cwd ./foo2 | _filter_file_attributes ~d
echo "Set attribute relative to AT_FDCWD"
file_attr --set --at-cwd --set-nodump ./foo2
file_attr --get --at-cwd ./foo2 | _filter_file_attributes ~d

echo "Set attribute on AT_FDCWD"
mkdir ./bar
file_attr --get --at-cwd ./bar | _filter_file_attributes ~d
cd ./bar
file_attr --set --at-cwd --set-nodump ""
file_attr --get --at-cwd . | _filter_file_attributes ~d

# success, all done
status=0
exit
